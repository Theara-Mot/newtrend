<?php

namespace App\Http\Controllers;

use App\Http\Requests\StoreCommentRequest;
use App\Models\Comment;
use App\Models\Post;
use Illuminate\Http\Request;

class CommentController extends Controller
{
    public function __construct()
    {
        $this->middleware('auth');
        $this->middleware(function ($request, $next) {
            if (auth()->user()->isBanned()) {
                return redirect()->route('home')->with('error', 'Your account has been banned.');
            }
            return $next($request);
        });
    }

    public function store(StoreCommentRequest $request, Post $post)
    {
        if ($post->status !== 'approved') {
            abort(404);
        }

        $comment = $post->comments()->create([
            'user_id' => auth()->id(),
            'content' => $request->validated()['content'],
        ]);

        // Update comment count
        $post->increment('comments_count');

        if ($request->expectsJson()) {
            return response()->json([
                'success' => true,
                'comment' => $comment->load('user'),
                'comments_count' => $post->fresh()->comments_count,
            ]);
        }

        return redirect()->back()->with('success', 'Comment added successfully!');
    }

    public function destroy(Comment $comment)
    {
        $this->authorize('delete', $comment);

        $post = $comment->post;
        $comment->delete();
        
        // Update comment count
        $post->decrement('comments_count');

        if (request()->expectsJson()) {
            return response()->json([
                'success' => true,
                'comments_count' => $post->fresh()->comments_count,
            ]);
        }

        return redirect()->back()->with('success', 'Comment deleted successfully!');
    }
}
